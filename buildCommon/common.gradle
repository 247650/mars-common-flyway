def artifactoryUser = project.getProperties().get('artifactory.username') ?: ""
def artifactoryPassword = project.getProperties().get('artifactory.password') ?: ""
def artifactoryUrl = project.getProperties().get('artifactory.contextUrl')
def artifactoryRepoKey = project.getProperties().get('artifactory.repoKey')


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco' 
apply plugin: 'com.jfrog.artifactory'



apply from: "file:${projectDir}/packaging.gradle" //Developers can define packaging requirements in this file.
apply from: "file:${projectDir}/dependencies.gradle"  //where to define compile and runtime dependencies, pulling from ivy

group = project.getProperties().get('group')
version = "${this.getProperty('currentVersion')}"

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}\\reports\\coverage")
    }
} 

test.finalizedBy jacocoTestReport

test {
    testLogging {
        showStandardStreams = true
    }
}

sourceCompatibility = requiredJavaVersion


jar.enabled = true

defaultTasks 'clean','build'


task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

// The repository stanza should be replaced as below
repositories {
    mavenLocal()
    maven {
        url "${artifactoryUrl}/${artifactoryRepoKey}"
    }
}


apply plugin: 'maven-publish'
// Add a new publishing stanza to support sending the builds to Artifactory
publishing {
    publications {
        mavenJava(MavenPublication) {
                        from components.java
 			artifact sourcesJar
            artifact javadocJar           
        }
    }
    repositories {
        maven {
            credentials {
                username artifactoryUser
                password artifactoryPassword
            }
            url "${artifactoryUrl}/${artifactoryRepoKey}"
        }
    }
}



artifactory {
     contextUrl = "${this.getProperty('artifactory.contextUrl')}"
     publish {
         repository {
             repoKey = "${this.getProperty('artifactory.repoKey')}"
             username = artifactoryUser
             password = artifactoryPassword
             maven = true
         }
         defaults {
             publications ('mavenJava')
         }
     }  
 }

task getAnnotationProcessor(type: Copy) {
  from configurations.annotationProcessor
  into file("$buildDir/archive")
}

build.finalizedBy(getAnnotationProcessor)

